image: golang:1-alpine

stages:
  - build
  - test
  - upload

include:
  - template: Dependency-Scanning.gitlab-ci.yml
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/License-Scanning.gitlab-ci.yml

variables:
  DS_DEFAULT_ANALYZERS: "gemnasium"
  SAST_EXCLUDED_PATHS: ".ci, .idea"
  SAST_DEFAULT_ANALYZERS: gosec

build:
  stage: build
  variables:
    CGO_ENABLED: "0"
    GOOS: linux
    GOARCH: amd64
  script:
    - go build -ldflags="-w -s"
  artifacts:
    expose_as: jf-server-announcer
    name: jf-server-announcer
    paths:
      - jf-server-announcer

upload:
  stage: upload
  image: curlimages/curl:latest
  needs:
    - build
  dependencies:
    - build
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - |
      [ "${CI_COMMIT_TAG%${CI_COMMIT_TAG#?}}"x != 'vx' ] && exit 0
    - 'curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file jf-server-announcer "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/jf-server-announcer/${CI_COMMIT_TAG#?}/jf-server-announcer"'
